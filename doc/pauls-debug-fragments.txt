This file contains fragments of code Paul ends up pasting into stuff often to debug. You can ignore it.
It's just so he can keep it around.

---

FILE *logfp = NULL;
FILE *lfp() {
    if( logfp == NULL )
        logfp = fopen( "/tmp/surgevst3.log", "w" );
    return logfp;
}
#define V2LF(fmt, ...) { fprintf( lfp(),"[%s/%d]" fmt "\n", strrchr("/" __FILE__, '/') + 1, __LINE__, __VA_ARGS__ ); fflush(lfp()); }

---
#if MAC
#include <execinfo.h>
#endif

void stackToInfo()
{
#if MAC
    void* callstack[128];
    int i, frames = backtrace(callstack, 128);
    char** strs = backtrace_symbols(callstack, frames);
    for (i = 1; i < 8; ++i) {
        printf( "StackTrace[%3d]: %s\n", i, strs[i] );
    }
    free(strs);
#endif
}
---

Huh getting a core file and a stack trace is a bit of work. Here's how to do it if you want to.

cp /usr/bin/auvaltool .
you have to do this since mojave won't allow you to attach a debugger to stuff owned by root thanks to SIP
ulimit -c unlimited
touch /cores/foo
rm /cores/foo
if those don't work, then you need to set permissions on /cores properly
./auvaltool -vt aumu VmbA
this should dump a nice big /cores/core.(pid) file
lldb ./auvaltool -c /cores/core.(pid)
bt all
